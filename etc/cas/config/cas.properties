cas.server.name: https://localhost:8443
cas.server.prefix: https://localhost:8443/cas

cas.adminPagesSecurity.ip=127\.0\.0\.1

logging.config: file:/etc/cas/config/log4j2.xml

logging.level.org.apereo=INFO

#cas.authn.accept.users=
# cas.serviceRegistry.config.location: classpath:/services


# AJP
cas.server.ajp.enabled=true
cas.server.ajp.port=8009
cas.server.ajp.attributes.packetSize=65536
cas.server.ajp.protocol=AJP/1.3

# HTTP


# Configuração para SSL Local
server.ssl.clientAuth=want
server.ssl.trust-store=file:/etc/cas/truststore
server.ssl.trust-store-password=changeit


# SSL Valve - SSL Termination -  uncomment this and comment local SSL config
#server.port=8080
#server.ssl.enabled=false
#server.ssl.keyStore=
#server.ssl.keyStorePassword=
#server.ssl.keyPassword=
#cas.server.sslValve.enabled=true
#cas.server.sslValve.sslClientCertHeader=ssl_client_cert
#server.maxHttpHeaderSize=20971520
#server.useForwardHeaders=true
#server.connectionTimeout=20000
#server.tomcat.maxHttpPostSize=20971520

##
# reCAPTCHA
#
cas.googleRecaptcha.verifyUrl=https://www.google.com/recaptcha/api/siteverify
cas.googleRecaptcha.siteKey=6LdqqtUSAAAAANuMCCRM9-VlKh61QbKrnOZNznCJ
cas.googleRecaptcha.secret=6LdqqtUSAAAAAF16Lrqd2vsAckLVh3F_kWhTzQ8h

## General

cas.tgc.secure: true
cas.tgc.crypto.signing.key: aMW15b7n8wzc1kvK81ntxYrUrTmwpkMqlQB_R6PCxMphuuhvh5wKSxLBn2PyqINP35Cuk1KFfFO_PiXY1vf6wA
cas.tgc.crypto.encryption.key: ajW4ZAQz9I0MwyJn8iTPrTumQe8vRBwIokslb_BPSpE

cas.webflow.crypto.signing.key: CcqBzuF5xU34Dy8N1UeH8rg_Bh2ZDRIUNEsLeH-8ZUtzEtu49HdHBLBbmMt8poPcKQGB0k7-Kqjo4PGE40AhmA
cas.webflow.crypto.encryption.key: ifA8RPrQpkjZHSFSpmaixQ==

## Mongo Ticket Registry
#cas.ticket.registry.mongo.host=127.0.0.1
#cas.ticket.registry.mongo.userId=cas
#cas.ticket.registry.mongo.password=caspassword
#cas.ticket.registry.mongo.databaseName=cas-ticket

## Mongo Service Registry
#cas.serviceRegistry.mongo.host=127.0.0.1
#cas.serviceRegistry.mongo.userId=cas
#cas.serviceRegistry.mongo.password=caspassword
#cas.serviceRegistry.mongo.collection=cas-service-registry
#cas.serviceRegistry.mongo.databaseName=cas-service

##
# LDAP
#

#========================================
# General properties
#========================================

#cas.authn.ldap[0].ldapUrl=ldap://127.0.0.1:389
#cas.authn.ldap[0].type=AUTHENTICATED
#cas.authn.ldap[0].type=ANONYMOUS

# LDAP connection timeout in milliseconds
cas.authn.ldap[0].connectTimeout=5000

# Whether to use SSL (probably needed if not SSL connection)
cas.authn.ldap[0].useSsl=false

# Whether to use StartTLS (probably needed if not SSL connection)
cas.authn.ldap[0].useStartTls=true

#========================================
# LDAP connection pool configuration
#========================================
cas.authn.ldap[0].minPoolSize=3
cas.authn.ldap[0].maxPoolSize=10
cas.authn.ldap[0].validateOnCheckout=true
cas.authn.ldap[0].validatePeriodically=true

# Amount of time in milliseconds to block on pool exhausted condition
# before giving up.
cas.authn.ldap[0].blockWaitTime=5000

# Frequency of connection validation in seconds
# Only applies if validatePeriodically=true
cas.authn.ldap[0].validatePeriod=600

# Attempt to prune connections every N seconds
cas.authn.ldap[0].prunePeriod=600

# Maximum amount of time an idle connection is allowed to be in
# pool before it is liable to be removed/destroyed
cas.authn.ldap[0].idleTime=500
cas.authn.ldap[0].failFast=false

#========================================
# Authentication
#========================================

# Base DN of users to be authenticated
cas.authn.ldap[0].baseDn=dc=com
cas.authn.ldap[0].subtreeSearch=true

# Manager DN for authenticated searches - LDAP User
cas.authn.ldap[0].bindDn=

# Manager password for authenticated searches - LDAP Password
cas.authn.ldap[0].bindCredential=

# Search filter used for configurations that require searching for DNs
cas.authn.ldap[0].userFilter=(uid={user})

# Search filter used for configurations that require searching for DNs
#cas.authn.ldap[0].dnFormat=uid=%s

# cas.authn.ldap[0].trustCertificates=
# cas.authn.ldap[0].keystore=
# cas.authn.ldap[0].keystorePassword=
# cas.authn.ldap[0].keystoreType=JKS|JCEKS|PKCS12

cas.authn.ldap[0].providerClass=org.ldaptive.provider.unboundid.UnboundIDProvider

# cas.authn.ldap[0].poolPassivator=NONE|CLOSE|BIND
# cas.authn.ldap[0].enhanceWithEntryResolver=true
# cas.authn.ldap[0].principalAttributeId=uid
# cas.authn.ldap[0].principalAttributePassword=userPassword
# Give an attribute list released from LDAP to CAS, could be used with attributeRepository.defaultAttributesToRelease to be visible on CAS P3 serviceValidate

cas.authn.ldap[0].principalAttributeList=uid,mail,cn,memberOf,sn,givenName
cas.authn.ldap[0].allowMultiplePrincipalAttributeValues=true
cas.authn.ldap[0].allowMissingPrincipalAttributeValue=true

cas.authn.attributeRepository.attributes.uid=uid
cas.authn.attributeRepository.attributes.cn=cn
cas.authn.attributeRepository.attributes.mail=mail
cas.authn.attributeRepository.attributes.memberOf=memberOf
cas.authn.attributeRepository.attributes.sn=sn
cas.authn.attributeRepository.attributes.givenName=givenName

cas.authn.attributeRepository.merger=ADD

cas.authn.attributeRepository.defaultAttributesToRelease=uid,cn,mail,memberOf,sn,givenName

# cas.authn.ldap[0].additionalAttributes=
# cas.authn.ldap[0].credentialCriteria=


# cas.authn.ldap[0].allowMultipleDns=false

# cas.authn.ldap[0].passwordEncoder.type=NONE|DEFAULT|STANDARD|BCRYPT
# cas.authn.ldap[0].passwordEncoder.characterEncoding=
# cas.authn.ldap[0].passwordEncoder.encodingAlgorithm=
# cas.authn.ldap[0].passwordEncoder.secret=
# cas.authn.ldap[0].passwordEncoder.strength=16

##
# Password Policy
#
cas.authn.ldap[0].usePasswordPolicy=true
cas.authn.ldap[0].passwordPolicy.enabled=true

# cas.authn.ldap[0].passwordPolicy.policyAttributes.accountLocked=javax.security.auth.login.AccountLockedException
# cas.authn.ldap[0].passwordPolicy.loginFailures=5
# cas.authn.ldap[0].passwordPolicy.warningAttributeValue=
# cas.authn.ldap[0].passwordPolicy.warningAttributeName=
# cas.authn.ldap[0].passwordPolicy.displayWarningOnMatch=true

# Warn all users of expiration date regardless of warningDays value.
cas.authn.ldap[0].passwordPolicy.warnAll=false

# Threshold number of days to begin displaying password expiration warnings.
cas.authn.ldap[0].passwordPolicy.warningDays=15



##
# X509 Authentication
#

cas.authn.x509.crlExpiredPolicy=THRESHOLD
cas.authn.x509.crlUnavailablePolicy=DENY
# cas.authn.x509.crlResourceExpiredPolicy=DENY|ALLOW|THRESHOLD
# cas.authn.x509.crlResourceUnavailablePolicy=DENY|ALLOW|THRESHOLD

cas.authn.x509.revocationChecker=CRL
cas.authn.x509.crlFetcher=RESOURCE

# cas.authn.x509.crlResources[0]=file:/...

cas.authn.x509.cacheMaxElementsInMemory=1000
cas.authn.x509.cacheDiskOverflow=false
cas.authn.x509.cacheEternal=false
cas.authn.x509.cacheTimeToLiveSeconds=3600
cas.authn.x509.cacheTimeToIdleSeconds=1800

cas.authn.x509.checkKeyUsage=true
cas.authn.x509.revocationPolicyThreshold=3780

# cas.authn.x509.regExSubjectDnPattern=.+
cas.authn.x509.regExTrustedIssuerDnPattern=.*
# cas.authn.x509.trustedIssuerDnPattern=.+

# cas.authn.x509.principalDescriptor=
# cas.authn.x509.maxPathLength=1
# cas.authn.x509.throwOnFetchFailure=false
# cas.authn.x509.valueDelimiter=,
cas.authn.x509.checkAll=false
cas.authn.x509.requireKeyUsage=true
# cas.authn.x509.serialNumberPrefix=SERIALNUMBER=
# cas.authn.x509.refreshIntervalSeconds=3600
cas.authn.x509.maxPathLengthAllowUnspecified=true

# To map x509 principal to LDAP
#cas.authn.x509.ldap.ldapUrl=ldap://127.0.0.1:389
#cas.authn.x509.ldap.useSsl=false
#cas.authn.x509.ldap.useStartTls=true
cas.authn.x509.ldap.connectTimeout=5000
cas.authn.x509.ldap.baseDn=dc=com
cas.authn.x509.ldap.searchFilter=(uid={user})
cas.authn.x509.ldap.subtreeSearch=true
# LDAP User
cas.authn.x509.ldap.bindDn=
# LDAP Password
cas.authn.x509.ldap.bindCredential=
# cas.authn.x509.ldap.trustCertificates=
# cas.authn.x509.ldap.keystore=
# cas.authn.x509.ldap.keystorePassword=
# cas.authn.x509.ldap.keystoreType=JKS|JCEKS|PKCS12
cas.authn.x509.ldap.minPoolSize=3
cas.authn.x509.ldap.maxPoolSize=10
cas.authn.x509.ldap.validateOnCheckout=true
cas.authn.x509.ldap.validatePeriodically=true
cas.authn.x509.ldap.validatePeriod=600
cas.authn.x509.ldap.failFast=false
cas.authn.x509.ldap.idleTime=500
cas.authn.x509.ldap.prunePeriod=600
cas.authn.x509.ldap.blockWaitTime=5000
cas.authn.x509.ldap.providerClass=org.ldaptive.provider.unboundid.UnboundIDProvider

# cas.authn.x509.principal.principalAttribute=
# cas.authn.x509.principal.returnNull=false
# cas.authn.x509.principalType=SERIAL_NO|SERIAL_NO_DN|SUBJECT|SUBJECT_ALT_NAME|SUBJECT_DN|ICPBRASIL
cas.authn.x509.principalType=ICPBRASIL

##
# SAML
#

#cas.samlCore.ticketidSaml2=true
#cas.samlCore.skewAllowance=0
#cas.samlCore.attributeNamespace=http://www.ja-sig.org/products/cas/
#cas.samlCore.issuer=localhost
cas.authn.samlIdp.entityId=${cas.server.prefix}/idp
cas.authn.samlIdp.scope=example.com
cas.authn.samlIdp.metadata.location=file:/etc/cas/saml
#cas.samlCore.securityManager=org.apache.xerces.util.SecurityManager
#cas.samlCore.securityManager=

##
# OpenID Connect
#
cas.authn.oidc.issuer=${cas.server.prefix}/oidc
cas.authn.oidc.jwksFile=file:/etc/cas/config/keystore.jwks

cas.authn.oidc.scopes=openid,profile,email,address,phone,offline_access,profile_full

# os campos tem que bater com o do LDAP
cas.authn.oidc.userDefinedScopes.profile_full=givenName,lastName,mail,displayName
cas.authn.oidc.claimsMap.uid=uid
cas.authn.oidc.claimsMap.givenName=givenName
cas.authn.oidc.claimsMap.lastName=sn
cas.authn.oidc.claimsMap.mail=mail
cas.authn.oidc.claimsMap.displayName=cn

cas.authn.oidc.claims=sub,name,preferred_username,family_name, \
given_name,middle_name,given_name,profile, \
picture,nickname,website,zoneinfo,locale,updated_at,birthdate, \
email,email_verified,phone_number,phone_number_verified,address, \
givenName,lastName,mail,displayName,uid
